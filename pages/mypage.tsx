import axios from 'axios';
import type { NextPage } from 'next';
import Head from 'next/head';
import { useEffect, useState } from 'react';
import { Button } from 'react-bulma-components';
import { useLoginStatus } from '../hooks/useLoginStatus';
import { Payment, Subscription, User } from '../types';

const MyPage: NextPage = () => {
	const isLogin = useLoginStatus();

	const [currentUser, setCurrentUser] = useState<null | User>(null);
	const [subscriptions, setSubscriptions] = useState<null | [Subscription]>(null);
	const [paymentHistory, setPaymentHistory] = useState<null | [Payment]>(null);

	useEffect(() => {
		const getCurrentUser = async () => {
			try {
				const res = await axios.get('https://app.twinte.net/api/v3/donation/users/me');
				setCurrentUser(res.data);
			} catch (error) {
				console.error(error);
			}
		};

		const getSubscriptions = async () => {
			try {
				const res = await axios.get('https://app.twinte.net/api/v3/donation/subscriptions');
				setSubscriptions(res.data);
			} catch (error) {
				console.error(error);
			}
		};

		const getPaymentHistory = async () => {
			try {
				const res = await axios.get('https://app.twinte.net/api/v3/donation/payment');
				setPaymentHistory(res.data);
			} catch (error) {
				console.error(error);
			}
		};

		getCurrentUser();
		getSubscriptions();
		getPaymentHistory();
	}, []);

	if (isLogin == null) return <div>loading...</div>;

	return (
		<>
			<Head>
				<title>Create Next App</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<div>
				{isLogin ? (
					<>
						<h1 className="title pagetitle">マイページ</h1>
						<div className="card">
							<h1 className="title">ユーザ情報</h1>
							<p>
								<a href="https://www.twinte.net/sponsor">寄附者一覧</a>
								に表示するお名前とリンクです。
							</p>
							{currentUser ? (
								<>
									<div>
										<h2 className="has-text-primary has-text-weight-bold">ID</h2>
										<p>{currentUser.twinteUserId}</p>
									</div>
									<div>
										<h2 className="has-text-primary has-text-weight-bold">現在の表示名</h2>
										<p>{currentUser.displayName || '未設定'}</p>
									</div>
									<div>
										<h2 className="has-text-primary has-text-weight-bold">リンク</h2>
										<p>{currentUser.link || '未設定'}</p>
									</div>
								</>
							) : (
								<div>情報の取得に失敗しました。</div>
							)}
						</div>
						<div className="card">
							<h1 className="title">サブスクリプションの登録状況</h1>
							<div>
								<h2 className="has-text-primary has-text-weight-bold">ご利用中のプラン</h2>
								{subscriptions != null ? (
									subscriptions.length ? (
										subscriptions.map((subscription) => (
											<div key={subscription.id}>
												<span>{subscription.plans[0].name}寄付</span>
												<Button className="is-danger">解約</Button>
											</div>
										))
									) : (
										<div>ご利用中のプランはありません。</div>
									)
								) : (
									<div>情報の取得に失敗しました。</div>
								)}
							</div>
						</div>

						<div className="card">
							<h1 className="title">寄付の履歴</h1>
							{paymentHistory != null ? (
								paymentHistory.length ? (
									paymentHistory.map((payment) => (
										<div className="columns is-mobile" key={payment.id}>
											<div className="column">{payment.created}</div>
											<div className="column">
												<div className="columns is-gapless">
													<div className="column">
														<p>{payment.amount}円</p>
													</div>
													<div className="column">
														<p className="has-text-grey">{payment.type}</p>
													</div>
												</div>
											</div>
											<hr className="is-marginless" />
										</div>
									))
								) : (
									<div>寄付の履歴はありません。</div>
								)
							) : (
								<div>情報の取得に失敗しました。</div>
							)}
						</div>
					</>
				) : (
					<p>右上のログインボタンからログインしてください。</p>
				)}
			</div>
		</>
	);
};

export default MyPage;
